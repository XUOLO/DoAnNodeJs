[{"C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\App.js":"2","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Nav.js":"3","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Login.js":"4","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Footer.js":"5","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\UpdateComp.js":"6","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\AddProduct.js":"7","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\ProductList.js":"8","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\PrivateComp.js":"9","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Profile.js":"10","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Home.js":"11","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\UpdateUser.js":"12","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\AddClass.js":"13","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\AddStudent.js":"14","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\UpdateClass.js":"15","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Signup.js":"16","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\UpdateStudent.js":"17","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\DetailClass.js":"18","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Tables.js":"19"},{"size":218,"mtime":1655314703000,"results":"20","hashOfConfig":"21"},{"size":2104,"mtime":1704699517094,"results":"22","hashOfConfig":"21"},{"size":1687,"mtime":1704679639812,"results":"23","hashOfConfig":"21"},{"size":1791,"mtime":1704678596741,"results":"24","hashOfConfig":"21"},{"size":153,"mtime":1704427590548,"results":"25","hashOfConfig":"21"},{"size":2478,"mtime":1704433895861,"results":"26","hashOfConfig":"21"},{"size":3385,"mtime":1704535410187,"results":"27","hashOfConfig":"21"},{"size":3470,"mtime":1704700444238,"results":"28","hashOfConfig":"21"},{"size":237,"mtime":1704430697571,"results":"29","hashOfConfig":"21"},{"size":1471,"mtime":1704532740528,"results":"30","hashOfConfig":"21"},{"size":6405,"mtime":1704639703610,"results":"31","hashOfConfig":"21"},{"size":2058,"mtime":1704624530795,"results":"32","hashOfConfig":"21"},{"size":2555,"mtime":1704636363577,"results":"33","hashOfConfig":"21"},{"size":3051,"mtime":1704638718981,"results":"34","hashOfConfig":"21"},{"size":1982,"mtime":1704633993547,"results":"35","hashOfConfig":"21"},{"size":2412,"mtime":1704676926190,"results":"36","hashOfConfig":"21"},{"size":2274,"mtime":1704640232970,"results":"37","hashOfConfig":"21"},{"size":3757,"mtime":1704641133545,"results":"38","hashOfConfig":"21"},{"size":4780,"mtime":1704699628917,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1km59zw",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"43"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"43"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"43"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\index.js",[],[],[],"C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\App.js",["109","110"],[],"import './App.css';\nimport './LoginCss.css';\nimport Nav from './component/Nav'\nimport Footer from './component/Footer';\nimport Signup from './component/Signup';\nimport {BrowserRouter, Routes, Route} from 'react-router-dom'\nimport PrivateComp from './component/PrivateComp';\nimport Login from './component/Login';\nimport AddProduct from './component/AddProduct';\nimport ProductList from './component/ProductList';\nimport UpdateComp from './component/UpdateComp';\nimport Profile from './component/Profile';\nimport Home from './component/Home';\nimport Table from './component/Tables';\n\nimport UpdateUser from './component/UpdateUser';\nimport UpdateClass from './component/UpdateClass';\n\nimport AddClass from './component/AddClass';\nimport AddStudent from './component/AddStudent';\nimport DetailClass from './component/DetailClass';\nimport UpdateStudent from './component/UpdateStudent';\n\nfunction App() {\n  const auth = localStorage.getItem('user')\n   const userName = localStorage.getItem('userName')\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter> \n      <Nav/>\n      <Routes>\n        <Route element={<PrivateComp/>}>\n        <Route path='/' element={<ProductList/>}/>\n\n        <Route path='/table' element={<Table/>}/>\n\n\n        <Route path='/add' element={<AddProduct/>}/>\n        <Route path='/home' element={<Home/>}/>\n        <Route path='/users/:id' element={<UpdateUser/>}/>\n        <Route path='/addClass' element={<AddClass/>}/>\n        <Route path='/addStudent' element={<AddStudent/>}/>\n        <Route path='/class/:id' element={<UpdateClass/>}/>\n        <Route path='/class/detailClass/:id' element={<DetailClass/>}/>\n        <Route path='/students/:id' element={<UpdateStudent/>}/>\n\n        <Route path='/products/:id' element={<UpdateComp/>}/>\n        <Route path='/logout' element={<h1>Logout component</h1>}/>\n        <Route path='/profile' element={<Profile/>}/>\n        </Route>\n        <Route path='/signup' element={<Signup/>}/>\n        <Route path='/login' element={<Login/>}/>\n      </Routes>\n      </BrowserRouter>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Nav.js",[],[],"C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Login.js",["111"],[],"import React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\n \n\nconst Login = () => {\n    const [userName, setuserName] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const navigate = useNavigate()\n    const [error, setError] = React.useState('');\n   useEffect(()=>{\n     const auth = localStorage.getItem('user')\n \n     if(auth){\n        \n      navigate('/home')\n     }\n     \n   },[])\n\n   const handleLogin = async () => {\n    try {\n      const result = await fetch('http://localhost:3000/authen/login', {\n        method: 'post',\n        body: JSON.stringify({ userName, password }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await result.json(); \n      if (result.ok) {\n        if(data.sucess===true){\n          console.log(data.sucess);\n          localStorage.setItem('user', JSON.stringify(data)); \n          localStorage.setItem('userName', JSON.stringify(data)); \n  \n           navigate('/home');\n        } \n        \n      } else {\n  \n        setError('Tài khoản hoặc mật khẩu không đúng');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred');\n    }\n  };\n  return (\n    <div className='login'>\n        <h1>Login</h1>\n        {error && <p className=\"error\">{error}</p>}\n\n        <input type=\"text\" className='inputBox' placeholder='Enter Email' \n        onChange={(e)=> setuserName(e.target.value)} value={userName}/>\n        <input type=\"password\" className='inputBox' placeholder='Enter Password' \n        onChange={(e)=> setPassword(e.target.value)} value={password}/>\n        <button onClick={handleLogin} type='button' className='appButton'>Login</button>\n    </div>\n  )\n}\n\nexport default Login","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Footer.js",[],[],"C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\UpdateComp.js",["112"],[],"import React, { useEffect } from 'react'\nimport {useParams, useNavigate} from 'react-router-dom'\n\nconst UpdateProduct = () => {\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const [image, setImage] = React.useState('');\n\n    const params = useParams();\n    const navigate = useNavigate()\n\n    useEffect(()=>{\n     getProductDetails();\n    },[])\n\n    const getProductDetails = async ()=>{\n        console.log(params)\n        let result = await fetch(`http://localhost:3000/products/${params.id}`)\n        result = await result.json()\n        const product = result.data[0];  \n\n        setName(product.name);\n        setPrice(product.price);\n        setDescription(product.description);\n        setImage(product.image);\n        \n    }\n\n    const updateProduct = async () => {\n        try {\n          console.log(name, price);\n          let result = await fetch(`http://localhost:3000/products/edit/${params.id}`, {\n            method: 'Put',\n            body: JSON.stringify({ name, price, description, image }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          result = await result.json();\n          if (result.sucess===true) {\n            navigate('/');\n          }\n          else{\n            alert(result.data);\n          }\n        } catch (error) {\n          \n          console.log('Lỗi:', error.message);\n          \n        }\n      };\n  return (\n    <div className='product'>\n        <h1>Update Product</h1>\n        <p>Product Name</p>\n        <input type=\"text\" placeholder='Add Product Name' className='inputBox'\n        value={name}   onChange={(e)=> setName(e.target.value)} />\n                <p>Description</p>\n\n        <input type=\"text\" placeholder='Add Product Price' className='inputBox'\n        value={description}   onChange={(e)=> setDescription(e.target.value)} />\n                <p>Price</p>\n\n        <input type=\"text\" placeholder='Add Product Name' className='inputBox'\n        value={price}   onChange={(e)=> setPrice(e.target.value)} />\n                <p>Image path</p>\n\n        <input type=\"text\" placeholder='Add Product Price' className='inputBox'\n        value={image}   onChange={(e)=> setImage(e.target.value)} />\n        \n         \n        <button onClick={updateProduct} className='appButton'>Update Product</button>\n    </div>\n  )\n}\n\nexport default UpdateProduct","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\AddProduct.js",["113","114"],[],"import React from 'react'\nimport { useNavigate } from 'react-router-dom';\n\n \nconst AddProduct = () => {\n    const navigate = useNavigate();\n    const roleLogin = localStorage.getItem('role')\n\n    const [name, setName] = React.useState('');\n    const [price, setPrice] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const [image, setImage] = React.useState('');\n\n    const [error, setError] = React.useState(false);\n    const auth = localStorage.getItem('user')\n \n    const token = JSON.parse(auth).data;\n    const addProduct = async ()=>{\n        if(!name || !price||!description||!image  ){\n            setError(true)\n            return false\n        }\n        console.log(name,price )\n        const userId = JSON.parse(localStorage.getItem('user'))._id;\n        console.log(userId)\n        let response = await fetch('http://localhost:3000/products/add',{\n            method:'post',\n            body:JSON.stringify({name,price,description,image }),\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`, \n            }\n        })\n\n\n\n        if (response.ok) {\n            const result = await response.json();\n            console.log(result);\n             navigate('/');\n          } else {\n            const result = await response.json();\n            const errorMessage = result.data;\n            console.error('Error:', response.status);\n            alert(errorMessage);\n            const data = await result.json();\n            setError(data.data);\n           }\n\n        \n    }\n    if (error) {\n        return <h1>Error: {error}</h1>;\n      }\n     const isUser = JSON.parse(localStorage.getItem('userName')).data.role === 'user';\n     if (roleLogin=='\"user\"') {\n        return (\n          <div className=\"product\">\n            <h1>Ban khong du quyen.</h1>\n          </div>\n        );\n      }\n    \n      return (\n        <div className=\"product\">\n          <h1>Add Product</h1>\n          <input\n            type=\"text\"\n            placeholder=\"Add Product Name\"\n            className=\"inputBox\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          {error && !name && <span className=\"invalid-input\">Enter Valid name</span>}\n    \n          <input\n            type=\"text\"\n            placeholder=\"Add Product description\"\n            className=\"inputBox\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n          {error && !price && <span className=\"invalid-input\">Enter Valid price</span>}\n    \n          <input\n            type=\"text\"\n            placeholder=\"Add Product Price\"\n            className=\"inputBox\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n          {error && !price && <span className=\"invalid-input\">Enter Valid price</span>}\n    \n          <input\n            type=\"text\"\n            placeholder=\"image path\"\n            className=\"inputBox\"\n            value={image}\n            onChange={(e) => setImage(e.target.value)}\n          />\n          {error && !price && <span className=\"invalid-input\">Enter Valid price</span>}\n          <button onClick={addProduct} className=\"appButton\">\n            Add Product\n          </button>\n        </div>\n      );\n    };\n    \n    export default AddProduct;","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\ProductList.js",["115","116","117"],[],"C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\PrivateComp.js",[],[],"C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Profile.js",["118","119","120"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst Profile = () => {\r\n  const [userName, setuserName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const auth = localStorage.getItem('user');\r\n  const token = JSON.parse(auth).data;\r\n\r\n  useEffect(() => {\r\n    getUserDetails();\r\n  }, []);\r\n\r\n  const getUserDetails = async () => {\r\n    try {\r\n      const result = await fetch('http://localhost:3000/authen/me', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (result.ok) {\r\n        const data = await result.json();\r\n        setEmail(data.data.email);\r\n        setuserName(data.data.userName);\r\n        setRole(data.data.role);\r\n      } else {\r\n        const data = await result.json();\r\n        setError(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('An error occurred');\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <h1>Error: {error}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <h1>User info</h1>\r\n      <p>Username: {userName}</p>\r\n      <p>Email: {email}</p>\r\n      <p>Role: {role}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Home.js",["121","122","123","124","125"],[],"import React, {useState, useEffect } from 'react'\r\nimport { useParams,Link, useNavigate } from 'react-router-dom'\r\n \r\nconst ProductList = () => {\r\n    const [userName, setuserName] = React.useState('');\r\n     const [email, setEmail] = React.useState('');\r\n     const [role, setRole] = React.useState('');\r\n     const [userList, setuserList] = React.useState('');\r\n\r\n     const [classList, setclassList] = React.useState('');\r\n\r\n\r\n\r\n    const params = useParams();\r\n    const navigate = useNavigate()\r\n    const roleLogin = localStorage.getItem('role')\r\n\r\n    const auth = localStorage.getItem('user')\r\n    const token = JSON.parse(auth).data;\r\n   useEffect(()=>{\r\n    getUserDetails();\r\n    getListUser();\r\n    getClassRoom();\r\n},[])\r\n\r\nconst getUserDetails = async () => {\r\n    try {\r\n      const result = await fetch('http://localhost:3000/authen/me', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`, \r\n        },\r\n      });\r\n  \r\n      if (result.ok) {\r\n         \r\n        const data = await result.json();\r\n          \r\n        setEmail(data.data.email);\r\n        setuserName(data.data.userName);\r\n        setRole(data.data.role);\r\n        localStorage.setItem('role', JSON.stringify(data.data.role)); \r\n\r\n      } else {\r\n        alert('Failed to get profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred');\r\n    }\r\n  };\r\n  \r\n  const searchHandle = async (e)=>{\r\n    let key = e.target.value\r\n    if(key){\r\n      let result = await fetch(`http://localhost:3000/users/search/${key}`)\r\n      result = await result.json()\r\n      if(result){\r\n        setuserList(result)\r\n      }\r\n    }else{\r\n      getListUser();\r\n    }\r\n   \r\n   }\r\n\r\n   const deleteClassRoom = async (id)=>{\r\n     let result = await fetch(`http://localhost:3000/class/delete/${id}`,{\r\n        method:'Delete',\r\n        \r\n    })\r\n    result = await result.json();\r\n    if(result){\r\n      getClassRoom();\r\n    }\r\n}\r\nconst deleteUser = async (id)=>{\r\n  console.log(id)\r\n  let result = await fetch(`http://localhost:3000/users/delete/${id}`,{\r\n      method:'Delete',\r\n      \r\n  })\r\n  result = await result.json();\r\n  if(result){\r\n    getListUser();\r\n  }\r\n}\r\nconst getClassRoom = async () => {\r\n  try {\r\n    const result = await fetch('http://localhost:3000/class', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`, \r\n      },\r\n    });\r\n\r\n    if (result.ok) {\r\n         \r\n      const data = await result.json();\r\n       \r\n      setclassList(data.data);\r\n       \r\n\r\n    } else {\r\n      alert('Failed to get class list');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    alert('An error occurred');\r\n  }\r\n};\r\n\r\n  const getListUser = async () => {\r\n    try {\r\n      const result = await fetch('http://localhost:3000/users', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // Authorization: `Bearer ${token}`, \r\n        },\r\n      });\r\n  \r\n      if (result.ok) {\r\n         \r\n        const data = await result.json();\r\n         \r\n        setuserList(data.data);\r\n         \r\n\r\n      } else {\r\n        alert('Failed to get userList');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred');\r\n    }\r\n  };\r\n  const searchClassHandle = async (e)=>{\r\n    let key = e.target.value\r\n    if(key){\r\n      let result = await fetch(`http://localhost:3000/class/search/${key}`)\r\n  \r\n      \r\n      result = await result.json()    \r\n      if(result){\r\n          setclassList(result)\r\n      }\r\n    }else{\r\n        getClassRoom()\r\n    }\r\n  }\r\n  if (roleLogin==='\"admin\"') {\r\n    return (\r\n      <div>\r\n        <h2>Hello {userName}</h2>\r\n        <p>ROLE: {role}</p>\r\n\r\n\r\n        <div className=\"product-list\">\r\n            {/* <a> Welcome {JSON.parse(userName).data.userName} <p>ROLE: {JSON.parse(userName).data.role}</p></a> */}\r\n\r\n      <h1>User List</h1>\r\n        <p>\r\n    <Link to=\"/signup\" className=\"button-link\">Add user</Link>\r\n  </p>\r\n      <input type=\"text\" className=\"search-product-box\" placeholder=\"Search user\" onChange={searchHandle} />\r\n      <ul>\r\n        <li>S. No.</li>\r\n        <li>username</li>\r\n        <li>role</li>\r\n         \r\n        <li>Operation</li>\r\n      </ul>\r\n      {userList.length > 0 ? (\r\n        userList.map((item, index) => (\r\n          <ul key={item._id}>\r\n            <li>{index + 1}</li>\r\n            <li>{item.userName}</li>\r\n            <li>{item.role}</li>\r\n            \r\n            <li>\r\n            <button onClick={() => deleteUser(item._id)}>Delete</button>\r\n        <Link to={`/users/${item._id}`}>Update</Link>\r\n            </li>\r\n          </ul>\r\n        ))\r\n      ) : (\r\n        <h1>No Result Found</h1>\r\n      )}\r\n    </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n  if (roleLogin==='\"publisher\"') {\r\n    return (\r\n      <div>\r\n        <h2>Hello {userName}</h2>\r\n        <p>ROLE: {role}</p>\r\n\r\n\r\n        <div className=\"product-list\">\r\n \r\n      <h1>Publisher</h1>\r\n      <input type=\"text\" className=\"search-product-box\" placeholder=\"Search class\" onChange={searchClassHandle} />\r\n      <Link to=\"/addClass\" className=\"button-link\">Add class</Link>\r\n        <p>\r\n     \r\n    \r\n    {/* <Link to=\"/addStudent\" className=\"button-link-student\">Add student</Link> */}\r\n    <ul>\r\n        <li>S. No.</li>\r\n        <li>Class Name</li>\r\n        <li>Teacher Name</li>\r\n         \r\n        <li>Operation</li>\r\n      </ul>\r\n      {classList.length > 0 ? (\r\n        classList.map((item, index) => (\r\n          <ul key={item._id}>\r\n            <li>{index + 1}</li>\r\n            <li>{item.name}</li>\r\n            <li>{item.teacherName}</li>\r\n            \r\n            <li>\r\n            <button onClick={() => deleteClassRoom(item._id)}>Delete</button>\r\n        <Link to={`/class/${item._id}`}>Update</Link>\r\n        <span></span>\r\n        <Link to={`/class/detailClass/${item._id}`}>Class detail</Link>\r\n\r\n            </li>\r\n          </ul>\r\n        ))\r\n      ) : (\r\n        <h1>No Result Found</h1>\r\n      )}\r\n  </p>\r\n  \r\n    </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n return (\r\n    <div className=\"product-list\">\r\n   \r\n      <div>\r\n        <h2>Hello {userName}</h2>\r\n        <p>ROLE: {role}</p>\r\n      </div>\r\n      \r\n        \r\n    \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\UpdateUser.js",["126"],[],"import React, { useEffect } from 'react'\r\nimport {useParams, useNavigate} from 'react-router-dom'\r\n\r\nconst UpdateProduct = () => {\r\n    const [role, setRole] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n     \r\n    const params = useParams();\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(()=>{\r\n        getUserDetails();\r\n    },[])\r\n\r\n    const getUserDetails = async ()=>{\r\n        console.log(params)\r\n        let result = await fetch(`http://localhost:3000/users/${params.id}`)\r\n        result = await result.json()\r\n        const user = result.data;  \r\n\r\n        setRole(user.role);\r\n       \r\n        setEmail(user.email);\r\n      console.log(user.email)\r\n        \r\n    }\r\n\r\n    const updateUsers = async () => {\r\n        try {\r\n          \r\n          let result = await fetch(`http://localhost:3000/users/edit/${params.id}`, {\r\n            method: 'Put',\r\n            body: JSON.stringify({ email, role }),\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          result = await result.json();\r\n          if (result.sucess===true) {\r\n            navigate('/home');\r\n          }\r\n          else{\r\n            alert(result.data);\r\n          }\r\n        } catch (error) {\r\n          \r\n          console.log('Lỗi:', error.message);\r\n          \r\n        }\r\n      };\r\n  return (\r\n    <div className='product'>\r\n        <h1>Update User</h1>\r\n        <p>Email</p>\r\n        <input type=\"text\" placeholder='Add email ' className='inputBox'\r\n        value={email}   onChange={(e)=> setEmail(e.target.value)} />\r\n                <p>Role</p>\r\n                <select className='inputBox' value={role} onChange={(e) => setRole(e.target.value)}>\r\n    <option  >--Select ROLE--</option>\r\n    <option value=\"user\">User</option>\r\n\r\n    <option value=\"admin\">Admin</option>\r\n    <option value=\"publisher\">Publisher</option>\r\n</select>\r\n         \r\n        <button onClick={updateUsers} className='appButton'>Update user</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateProduct","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\AddClass.js",[],[],"C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\AddStudent.js",[],[],"C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\UpdateClass.js",["127"],[],"import React, { useEffect } from 'react'\r\nimport {useParams, useNavigate} from 'react-router-dom'\r\n\r\nconst UpdateProduct = () => {\r\n    const [name, setName] = React.useState('');\r\n    const [teacherName, setteacherName] = React.useState('');\r\n     \r\n    const params = useParams();\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(()=>{\r\n        getClassDetails();\r\n    },[])\r\n\r\n    const getClassDetails = async ()=>{\r\n        console.log(params)\r\n        let result = await fetch(`http://localhost:3000/class/${params.id}`)\r\n        result = await result.json()\r\n        const user = result.data;  \r\n        console.log(user);\r\n        setName(user.name);\r\n       \r\n        setteacherName(user.teacherName);\r\n         \r\n    }\r\n\r\n    const updateClass = async () => {\r\n        try {\r\n          \r\n          let result = await fetch(`http://localhost:3000/class/edit/${params.id}`, {\r\n            method: 'Put',\r\n            body: JSON.stringify({ name, teacherName }),\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          result = await result.json();\r\n          if (result.sucess===true) {\r\n            navigate('/home');\r\n          }\r\n          else{\r\n            alert(result.data);\r\n          }\r\n        } catch (error) {\r\n          \r\n          console.log('Lỗi:', error.message);\r\n          \r\n        }\r\n      };\r\n  return (\r\n    <div className='product'>\r\n        <h1>Update class</h1>\r\n        <p>Class name</p>\r\n        <input type=\"text\" placeholder='Add name ' className='inputBox'\r\n        value={name}   onChange={(e)=> setName(e.target.value)} />\r\n                <p>Teacher name</p>\r\n                <input type=\"text\" placeholder='Add teacher name ' className='inputBox'\r\n        value={teacherName}   onChange={(e)=> setteacherName(e.target.value)} />\r\n         \r\n        <button onClick={updateClass} className='appButton'>Update class</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateProduct","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Signup.js",["128"],[],"import React,{useEffect, useState} from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport '../LoginCss.css';\nconst Signup = () => {\n    const [userName, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [role, setRole] = useState('');\n    const roleLogin = localStorage.getItem('role')\n\n    const navigate = useNavigate();\n     \n\n    const collectData = async () => {\n        console.log(userName, email, password, role);\n        try {\n          const response = await fetch('http://localhost:3000/authen/register', {\n            method: 'POST',\n            body: JSON.stringify({ userName, email, password, role }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n      \n          if (response.ok) {\n            const result = await response.json();\n            console.log(result);\n             navigate('/login');\n          } else {\n            const result = await response.json();\n            const errorMessage = result.data;\n            console.error('Error:', response.status);\n            alert(errorMessage);\n\n           }\n        } catch (error) {\n          console.error('Error:', error);\n          // Handle network or other errors\n        }\n      };\n\n      if (roleLogin==='\"user\"'||roleLogin==='\"publisher\"') {\n        return (\n          <div className=\"product\">\n            <h1>Ban khong du quyen.</h1>\n          </div>\n        );\n      }\n  return (\n    <div className='register'>\n        <h1>Add user</h1>\n        <input className='inputBox' type=\"text\" placeholder='Enter username'\n        value={userName} onChange={(e)=> setName(e.target.value)} />\n        <input className='inputBox' type=\"text\" placeholder='Enter Email'\n        value={email} onChange={(e)=> setEmail(e.target.value)} />\n        <input className='inputBox' type=\"password\" placeholder='Enter Password'\n        value={password} onChange={(e)=> setPassword(e.target.value)} />\n        <select className='inputBox' value={role} onChange={(e) => setRole(e.target.value)}>\n    <option  >--Select ROLE--</option>\n    <option value=\"user\">User</option>\n\n    <option value=\"admin\">Admin</option>\n    <option value=\"publisher\">Publisher</option>\n</select>\n        <button onClick={collectData} className='appButton' type='button'>Add user</button>\n    </div>\n  )\n}\n\nexport default Signup","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\UpdateStudent.js",["129"],[],"import React, { useEffect } from 'react'\r\nimport {useParams, useNavigate} from 'react-router-dom'\r\n\r\nconst UpdateStudent = () => {\r\n    const [name, setName] = React.useState('');\r\n    const [age, setAge] = React.useState('');\r\n    const [address, settaddress] = React.useState('');\r\n    const idClass = localStorage.getItem('idClass')\r\n\r\n    const params = useParams();\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(()=>{\r\n        getUserDetails();\r\n    },[])\r\n\r\n    const getUserDetails = async ()=>{\r\n        console.log(params)\r\n        let result = await fetch(`http://localhost:3000/students/${params.id}`)\r\n        result = await result.json()\r\n        const user = result.data;  \r\n\r\n        setName(user.name);\r\n       \r\n        setAge(user.age);\r\n        settaddress(user.address);\r\n         \r\n    }\r\n\r\n    const updateUsers = async () => {\r\n        try {\r\n          \r\n          let result = await fetch(`http://localhost:3000/students/edit/${params.id}`, {\r\n            method: 'Put',\r\n            body: JSON.stringify({ name, age,address }),\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          result = await result.json();\r\n          if (result.sucess===true) {\r\n            navigate('/class/detailClass/'+idClass);\r\n            localStorage.removeItem('idClass')\r\n          }\r\n          else{\r\n            alert(result.data);\r\n          }\r\n        } catch (error) {\r\n          \r\n          console.log('Lỗi:', error.message);\r\n          \r\n        }\r\n      };\r\n  return (\r\n    <div className='product'>\r\n        <h1>Update student</h1>\r\n        <p>Name</p>\r\n        <input type=\"text\" placeholder='Add email ' className='inputBox'\r\n        value={name}   onChange={(e)=> setName(e.target.value)} />\r\n       <p>Age</p>\r\n        <input type=\"text\" placeholder='Add email ' className='inputBox'\r\n        value={age}   onChange={(e)=> setAge(e.target.value)} />\r\n       <p>Address</p>\r\n        <input type=\"text\" placeholder='Add email ' className='inputBox'\r\n        value={address}   onChange={(e)=> settaddress(e.target.value)} />\r\n       \r\n   \r\n         \r\n        <button onClick={updateUsers} className='appButton'>Update student</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateStudent","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\DetailClass.js",["130","131","132","133","134","135","136","137","138"],[],"import React, {useState, useEffect } from 'react'\r\nimport {useParams,Link} from 'react-router-dom'\r\n\r\nconst DetailClass = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [detailClass, setdetailClass] = useState([]);\r\n\r\n        const auth = localStorage.getItem('user')\r\n        const userName = localStorage.getItem('userName')\r\n        const classId = localStorage.getItem('classId')\r\n        const [className, setclassName] = useState([]);\r\n\r\n        const token = JSON.parse(auth).data;\r\n        const params = useParams();\r\n        const roleLogin = localStorage.getItem('role')\r\n\r\n    useEffect(()=>{\r\n \r\n        getProducts();\r\n \r\n    },[])\r\n    const getProducts = async () => {\r\n        try {\r\n          const result = await fetch(`http://localhost:3000/class/detailClass/${params.id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n    \r\n          if (result.ok) {\r\n            const data = await result.json();\r\n            // alert(params.id)\r\n            // const productList = data.productList;\r\n            // alert(data.data);\r\n            console.log(result);\r\n            setclassName(data.data.name);\r\n            setdetailClass(data.data.student);\r\n            localStorage.setItem('idClass', params.id); \r\n\r\n            // localStorage.setItem('userName', JSON.stringify(data)); \r\n          } else {\r\n            alert('Failed to get products');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          alert('An error occurred');\r\n        }\r\n      };\r\n    \r\n  const deleteProduct = async (id)=>{\r\n      console.log(id)\r\n      let result = await fetch(`http://localhost:3000/students/delete/${id}`,{\r\n          method:'Delete',\r\n          \r\n      })\r\n      result = await result.json();\r\n      if(result){\r\n        getProducts();\r\n      }\r\n  }\r\n\r\n const searchHandle = async (e)=>{\r\n  let key = e.target.value\r\n  if(key){\r\n    let result = await fetch(`http://localhost:3000/students/search/${params.id}/${key}`)\r\n\r\n    \r\n    result = await result.json()    \r\n    if(result){\r\n        setdetailClass(result)\r\n    }\r\n  }else{\r\n      getProducts()\r\n  }\r\n \r\n }\r\n const isAdmin = JSON.parse(localStorage.getItem('userName')).data.role === 'admin';\r\n//  const isUser = JSON.parse(localStorage.getItem('userName')).data.role === 'user';\r\n const isPublisher = JSON.parse(localStorage.getItem('userName')).data.role === 'publisher';\r\n const renderOperationButtons = (item) => {\r\n  if (roleLogin==='\"admin\"'||roleLogin==='\"publisher\"') {\r\n    return (\r\n      <>\r\n        <button onClick={() => deleteProduct(item._id)}>Delete</button>\r\n        <Link to={`/students/${item._id}`}>Update</Link>\r\n      </>\r\n    );\r\n  } else {\r\n    return <a>...</a> ;  \r\n  }\r\n};\r\n return (\r\n  \r\n    <div className=\"product-list\">\r\n \r\n      <h1>Student list of class {className}  </h1>\r\n      <input type=\"text\" className=\"search-product-box\" placeholder=\"Search student\" onChange={searchHandle} />\r\n          <Link to=\"/addStudent\" className=\"button-link-student\">Add student</Link>\r\n\r\n      <ul>\r\n        <li>S. No.</li>\r\n        <li>Student Name</li>\r\n        <li>Age</li>\r\n        <li>Address</li>\r\n        <li>Operation</li>\r\n      </ul>\r\n      {detailClass.length > 0 ? (\r\n        detailClass.map((item, index) => (\r\n          <ul key={item._id}>\r\n            <li>{index + 1}</li>\r\n            <li>{item.name}</li>\r\n            <li>{item.age}</li>\r\n            <li>{item.address}</li>\r\n\r\n             <li>\r\n              {renderOperationButtons(item)}\r\n            </li>\r\n          </ul>\r\n        ))\r\n      ) : (\r\n        <h1>No Student Found</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailClass;","C:\\Users\\admin\\Desktop\\doannodejs\\frontend\\src\\component\\Tables.js",[],[],{"ruleId":"139","severity":1,"message":"140","line":25,"column":9,"nodeType":"141","messageId":"142","endLine":25,"endColumn":13},{"ruleId":"139","severity":1,"message":"143","line":26,"column":10,"nodeType":"141","messageId":"142","endLine":26,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":18,"column":6,"nodeType":"146","endLine":18,"endColumn":8,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":15,"column":7,"nodeType":"146","endLine":15,"endColumn":9,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":55,"column":12,"nodeType":"141","messageId":"142","endLine":55,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":56,"column":19,"nodeType":"153","messageId":"154","endLine":56,"endColumn":21},{"ruleId":"144","severity":1,"message":"155","line":23,"column":7,"nodeType":"146","endLine":23,"endColumn":9,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":89,"column":12,"nodeType":"159","endLine":89,"endColumn":15},{"ruleId":"160","severity":1,"message":"161","line":112,"column":17,"nodeType":"159","endLine":112,"endColumn":83},{"ruleId":"139","severity":1,"message":"162","line":10,"column":9,"nodeType":"141","messageId":"142","endLine":10,"endColumn":15},{"ruleId":"139","severity":1,"message":"163","line":11,"column":9,"nodeType":"141","messageId":"142","endLine":11,"endColumn":17},{"ruleId":"144","severity":1,"message":"164","line":17,"column":6,"nodeType":"146","endLine":17,"endColumn":8,"suggestions":"165"},{"ruleId":"139","severity":1,"message":"166","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":24},{"ruleId":"139","severity":1,"message":"167","line":6,"column":13,"nodeType":"141","messageId":"142","endLine":6,"endColumn":18},{"ruleId":"139","severity":1,"message":"162","line":14,"column":11,"nodeType":"141","messageId":"142","endLine":14,"endColumn":17},{"ruleId":"139","severity":1,"message":"163","line":15,"column":11,"nodeType":"141","messageId":"142","endLine":15,"endColumn":19},{"ruleId":"144","severity":1,"message":"168","line":24,"column":3,"nodeType":"146","endLine":24,"endColumn":5,"suggestions":"169"},{"ruleId":"144","severity":1,"message":"164","line":13,"column":7,"nodeType":"146","endLine":13,"endColumn":9,"suggestions":"170"},{"ruleId":"144","severity":1,"message":"171","line":13,"column":7,"nodeType":"146","endLine":13,"endColumn":9,"suggestions":"172"},{"ruleId":"139","severity":1,"message":"173","line":1,"column":15,"nodeType":"141","messageId":"142","endLine":1,"endColumn":24},{"ruleId":"144","severity":1,"message":"164","line":15,"column":7,"nodeType":"146","endLine":15,"endColumn":9,"suggestions":"174"},{"ruleId":"139","severity":1,"message":"175","line":5,"column":12,"nodeType":"141","messageId":"142","endLine":5,"endColumn":20},{"ruleId":"139","severity":1,"message":"176","line":5,"column":22,"nodeType":"141","messageId":"142","endLine":5,"endColumn":33},{"ruleId":"139","severity":1,"message":"143","line":9,"column":15,"nodeType":"141","messageId":"142","endLine":9,"endColumn":23},{"ruleId":"139","severity":1,"message":"177","line":10,"column":15,"nodeType":"141","messageId":"142","endLine":10,"endColumn":22},{"ruleId":"139","severity":1,"message":"178","line":13,"column":15,"nodeType":"141","messageId":"142","endLine":13,"endColumn":20},{"ruleId":"144","severity":1,"message":"179","line":21,"column":7,"nodeType":"146","endLine":21,"endColumn":9,"suggestions":"180"},{"ruleId":"139","severity":1,"message":"181","line":78,"column":8,"nodeType":"141","messageId":"142","endLine":78,"endColumn":15},{"ruleId":"139","severity":1,"message":"182","line":80,"column":8,"nodeType":"141","messageId":"142","endLine":80,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":90,"column":12,"nodeType":"159","endLine":90,"endColumn":15},"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar","'userName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has a missing dependency: 'getProductDetails'. Either include it or remove the dependency array.",["184"],"'isUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'auth', 'getProducts', and 'navigate'. Either include them or remove the dependency array.",["185"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'params' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserDetails'. Either include it or remove the dependency array.",["186"],"'useState' is defined but never used.","'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getClassRoom' and 'getUserDetails'. Either include them or remove the dependency array.",["187"],["188"],"React Hook useEffect has a missing dependency: 'getClassDetails'. Either include it or remove the dependency array.",["189"],"'useEffect' is defined but never used.",["190"],"'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'classId' is assigned a value but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["191"],"'isAdmin' is assigned a value but never used.","'isPublisher' is assigned a value but never used.",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"198","fix":"202"},{"desc":"203","fix":"204"},{"desc":"198","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [navigate]",{"range":"208","text":"209"},"Update the dependencies array to be: [getProductDetails]",{"range":"210","text":"211"},"Update the dependencies array to be: [auth, getProducts, navigate]",{"range":"212","text":"213"},"Update the dependencies array to be: [getUserDetails]",{"range":"214","text":"215"},"Update the dependencies array to be: [getClassRoom, getUserDetails]",{"range":"216","text":"217"},{"range":"218","text":"215"},"Update the dependencies array to be: [getClassDetails]",{"range":"219","text":"220"},{"range":"221","text":"215"},"Update the dependencies array to be: [getProducts]",{"range":"222","text":"223"},[445,447],"[navigate]",[459,461],"[getProductDetails]",[551,553],"[auth, getProducts, navigate]",[521,523],"[getUserDetails]",[730,732],"[getClassRoom, getUserDetails]",[364,366],[377,379],"[getClassDetails]",[464,466],[665,667],"[getProducts]"]